#include <iostream>
using namespace std;

void pattern1(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){   
            cout << "*";
        }
    cout << "\n";
}
}

void pattern2(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<i+1; j++){
            cout << "*";
        }
        cout << "\n";
    }
}

void pattern3(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<i+1; j++){
            cout << j+1;
        }
        cout << "\n";
    }
}

void pattern4(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<i+1; j++){
            cout << i+1;
        }
        cout << "\n";
    }
}

void pattern5(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<n-i; j++){
            cout << "*";
        }
        cout << "\n";
    }
}

void pattern6(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<n-i; j++){
            cout << j+1;
        }
        cout << "\n";
    }
}

void pattern7(int n){
    for(int i=0; i<n; i++){
        for(int j=n-i-1; j>0; j--){
            cout << " ";
        }
        for(int j=0; j<2*i+1; j++){
            cout << "*";
        }
        cout << "\n";
    }
}

void pattern8(int n){
     for(int i=0; i<n; i++){
        for(int j=0; j<i; j++){
            cout << " ";
        }
        for(int j=2*(n-i-1)+1; j>0; j--){
            cout << "*";
        }
        cout << "\n";
    }
}

void pattern9(int n){
   pattern7(n);
   pattern8(n);
}

void pattern10(int n){
    for(int i=0; i<n; i++){
        for(int j=0; j<=i+1; j++){
            cout << "*";
        }
        cout << "\n";
    }
    for(int i=0; i<n-1; i++){
        for(int j=0; j<n-i-1; j++){
            cout << "*";
        }
        cout << "\n";
    }
}

void pattern11(int n){
    for(int i=0; i<n; i++){
        int start;
        if(i%2==0){start=1;}
        else start = 0;
        for(int j=0; j<i+1; j++){
            if(j%2==0){
                cout << start;
            }
            else cout << 1-start;
        }
        cout << endl;
    }
}

int main(){
int n;
cin >> n;
pattern11(n);

return 0;
}
